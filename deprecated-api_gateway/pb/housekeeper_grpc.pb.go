// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: housekeeper.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	HousekeeperService_CreateHousekeeper_FullMethodName  = "/HousekeeperService/CreateHousekeeper"
	HousekeeperService_GetHousekeeper_FullMethodName     = "/HousekeeperService/GetHousekeeper"
	HousekeeperService_GetAllHousekeepers_FullMethodName = "/HousekeeperService/GetAllHousekeepers"
	HousekeeperService_UpdateHousekeeper_FullMethodName  = "/HousekeeperService/UpdateHousekeeper"
	HousekeeperService_DeleteHousekeeper_FullMethodName  = "/HousekeeperService/DeleteHousekeeper"
)

// HousekeeperServiceClient is the client API for HousekeeperService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type HousekeeperServiceClient interface {
	// Create a new Housekeeper
	CreateHousekeeper(ctx context.Context, in *CreateHousekeeperRequest, opts ...grpc.CallOption) (*Housekeeper, error)
	// Get a Housekeeper by ID
	GetHousekeeper(ctx context.Context, in *GetHousekeeperRequest, opts ...grpc.CallOption) (*Housekeeper, error)
	// Get all Housekeepers
	GetAllHousekeepers(ctx context.Context, in *GetAllHousekeeperRequest, opts ...grpc.CallOption) (*HousekeeperList, error)
	// Update an existing Housekeeper
	UpdateHousekeeper(ctx context.Context, in *UpdateHousekeeperRequest, opts ...grpc.CallOption) (*Housekeeper, error)
	// Delete a Housekeeper by ID
	DeleteHousekeeper(ctx context.Context, in *DeleteHousekeeperRequest, opts ...grpc.CallOption) (*DeleteHousekeeperResponse, error)
}

type housekeeperServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHousekeeperServiceClient(cc grpc.ClientConnInterface) HousekeeperServiceClient {
	return &housekeeperServiceClient{cc}
}

func (c *housekeeperServiceClient) CreateHousekeeper(ctx context.Context, in *CreateHousekeeperRequest, opts ...grpc.CallOption) (*Housekeeper, error) {
	out := new(Housekeeper)
	err := c.cc.Invoke(ctx, HousekeeperService_CreateHousekeeper_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *housekeeperServiceClient) GetHousekeeper(ctx context.Context, in *GetHousekeeperRequest, opts ...grpc.CallOption) (*Housekeeper, error) {
	out := new(Housekeeper)
	err := c.cc.Invoke(ctx, HousekeeperService_GetHousekeeper_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *housekeeperServiceClient) GetAllHousekeepers(ctx context.Context, in *GetAllHousekeeperRequest, opts ...grpc.CallOption) (*HousekeeperList, error) {
	out := new(HousekeeperList)
	err := c.cc.Invoke(ctx, HousekeeperService_GetAllHousekeepers_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *housekeeperServiceClient) UpdateHousekeeper(ctx context.Context, in *UpdateHousekeeperRequest, opts ...grpc.CallOption) (*Housekeeper, error) {
	out := new(Housekeeper)
	err := c.cc.Invoke(ctx, HousekeeperService_UpdateHousekeeper_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *housekeeperServiceClient) DeleteHousekeeper(ctx context.Context, in *DeleteHousekeeperRequest, opts ...grpc.CallOption) (*DeleteHousekeeperResponse, error) {
	out := new(DeleteHousekeeperResponse)
	err := c.cc.Invoke(ctx, HousekeeperService_DeleteHousekeeper_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HousekeeperServiceServer is the server API for HousekeeperService service.
// All implementations must embed UnimplementedHousekeeperServiceServer
// for forward compatibility
type HousekeeperServiceServer interface {
	// Create a new Housekeeper
	CreateHousekeeper(context.Context, *CreateHousekeeperRequest) (*Housekeeper, error)
	// Get a Housekeeper by ID
	GetHousekeeper(context.Context, *GetHousekeeperRequest) (*Housekeeper, error)
	// Get all Housekeepers
	GetAllHousekeepers(context.Context, *GetAllHousekeeperRequest) (*HousekeeperList, error)
	// Update an existing Housekeeper
	UpdateHousekeeper(context.Context, *UpdateHousekeeperRequest) (*Housekeeper, error)
	// Delete a Housekeeper by ID
	DeleteHousekeeper(context.Context, *DeleteHousekeeperRequest) (*DeleteHousekeeperResponse, error)
	mustEmbedUnimplementedHousekeeperServiceServer()
}

// UnimplementedHousekeeperServiceServer must be embedded to have forward compatible implementations.
type UnimplementedHousekeeperServiceServer struct {
}

func (UnimplementedHousekeeperServiceServer) CreateHousekeeper(context.Context, *CreateHousekeeperRequest) (*Housekeeper, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHousekeeper not implemented")
}
func (UnimplementedHousekeeperServiceServer) GetHousekeeper(context.Context, *GetHousekeeperRequest) (*Housekeeper, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHousekeeper not implemented")
}
func (UnimplementedHousekeeperServiceServer) GetAllHousekeepers(context.Context, *GetAllHousekeeperRequest) (*HousekeeperList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllHousekeepers not implemented")
}
func (UnimplementedHousekeeperServiceServer) UpdateHousekeeper(context.Context, *UpdateHousekeeperRequest) (*Housekeeper, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHousekeeper not implemented")
}
func (UnimplementedHousekeeperServiceServer) DeleteHousekeeper(context.Context, *DeleteHousekeeperRequest) (*DeleteHousekeeperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteHousekeeper not implemented")
}
func (UnimplementedHousekeeperServiceServer) mustEmbedUnimplementedHousekeeperServiceServer() {}

// UnsafeHousekeeperServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to HousekeeperServiceServer will
// result in compilation errors.
type UnsafeHousekeeperServiceServer interface {
	mustEmbedUnimplementedHousekeeperServiceServer()
}

func RegisterHousekeeperServiceServer(s grpc.ServiceRegistrar, srv HousekeeperServiceServer) {
	s.RegisterService(&HousekeeperService_ServiceDesc, srv)
}

func _HousekeeperService_CreateHousekeeper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateHousekeeperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HousekeeperServiceServer).CreateHousekeeper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HousekeeperService_CreateHousekeeper_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HousekeeperServiceServer).CreateHousekeeper(ctx, req.(*CreateHousekeeperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HousekeeperService_GetHousekeeper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHousekeeperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HousekeeperServiceServer).GetHousekeeper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HousekeeperService_GetHousekeeper_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HousekeeperServiceServer).GetHousekeeper(ctx, req.(*GetHousekeeperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HousekeeperService_GetAllHousekeepers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllHousekeeperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HousekeeperServiceServer).GetAllHousekeepers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HousekeeperService_GetAllHousekeepers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HousekeeperServiceServer).GetAllHousekeepers(ctx, req.(*GetAllHousekeeperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HousekeeperService_UpdateHousekeeper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHousekeeperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HousekeeperServiceServer).UpdateHousekeeper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HousekeeperService_UpdateHousekeeper_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HousekeeperServiceServer).UpdateHousekeeper(ctx, req.(*UpdateHousekeeperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HousekeeperService_DeleteHousekeeper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteHousekeeperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HousekeeperServiceServer).DeleteHousekeeper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HousekeeperService_DeleteHousekeeper_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HousekeeperServiceServer).DeleteHousekeeper(ctx, req.(*DeleteHousekeeperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// HousekeeperService_ServiceDesc is the grpc.ServiceDesc for HousekeeperService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var HousekeeperService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "HousekeeperService",
	HandlerType: (*HousekeeperServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateHousekeeper",
			Handler:    _HousekeeperService_CreateHousekeeper_Handler,
		},
		{
			MethodName: "GetHousekeeper",
			Handler:    _HousekeeperService_GetHousekeeper_Handler,
		},
		{
			MethodName: "GetAllHousekeepers",
			Handler:    _HousekeeperService_GetAllHousekeepers_Handler,
		},
		{
			MethodName: "UpdateHousekeeper",
			Handler:    _HousekeeperService_UpdateHousekeeper_Handler,
		},
		{
			MethodName: "DeleteHousekeeper",
			Handler:    _HousekeeperService_DeleteHousekeeper_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "housekeeper.proto",
}
